# pip install -U transformers torch
from transformers import AutoTokenizer, AutoModel
import torch
import torch.nn.functional as F

# 1. Load tokenizer & model once (they're large, so keep them cached if you call many times)
MODEL_ID = "intfloat/multilingual-e5-large"
tokenizer = AutoTokenizer.from_pretrained(MODEL_ID)
model     = AutoModel.from_pretrained(MODEL_ID)

def embed(text: str) -> torch.Tensor:
    """
    Returns an L2-normalized embedding (1 × 768) for the given text.
    For E5 models, prefix with 'query: ' or 'passage: ' as recommended.
    """
    batch = tokenizer(text, return_tensors="pt",
                      truncation=True, padding=True, max_length=512)
    with torch.no_grad():
        outputs = model(**batch)
    # Use CLS-token representation
    emb = outputs.last_hidden_state[:, 0]
    # Normalize so dot-product == cosine similarity
    return F.normalize(emb, p=2, dim=1)

def similarity_score(article: str, query: str) -> float:
    art_emb  = embed("passage: " + article)
    qry_emb  = embed("query: "   + query)
    # Because both vectors are unit-normed, dot-product = cosine similarity
    return float((qry_emb @ art_emb.T).item())

# --- Example usage ----------------------------------------------------------
article_text = """Компания как набор сервисов

Компания как набор продуктов

Высокая связанность систем и команд - развязывание систем

Архитектура должна обеспечить оперативное и гибкое решение развитию бизнес процессов компании. 

В связи с постоянным развитием информационных технологий и расширением бизнес-процессов компании, внедряется сервис-ориентированный подход к разработке (Service Orientired Architecture). 

Основные преимущества SOA

Гибкость и масштабируемость: SOA позволяет создавать сервисы, которые могут быть повторно использованы в различных контекстах ИТ ландшафта. Это способствует гибкости архитектуры, позволяя адаптироваться к изменяющимся потребностям бизнеса.

Интеграция: Внедрение SOA позволит интегрировать существующие сервисы, такие как 1С:CRM, 1С:УХ, веб-сервисы и системы управления персоналом (1С:ЗУП), в единую цифровую экосистему. Это улучшит взаимодействие между системами и уменьшит изоляцию данных.

Стандартизация и централизация управления: SOA обеспечивает стандартизацию разработки сервисов, что упрощает их управление и поддержку, а также повышает прозрачность и эффективность разработки.

Быстрое внедрение новых функций: SOA позволяет быстро разрабатывать и внедрять новые функции и сервисы без необходимости пересмотра всей системы.

Локализация изменений: Изменения в бизнес-логике или функциональности локализуются в пределах отдельных сервисов, чтобы минимизировать потенциальные негативные последствия и упростить управление изменениями.

Мониторинг и аналитика: Каждый сервис оборудован средствами мониторинга и аналитики, которые позволяют отслеживать его работоспособность, производительность и использование ресурсов. Это помогает быстро выявлять и устранять проблемы и оптимизировать работу системы в целом.

Импортозамещение, возможность замены сервисов на доступные в РФ

Тренды в развитии сервисов интеграций с внешними сервисами и клиентами

API First подход, NFT First?

Data Architecture - Как сервисы вписываются в существующие домены данных - Обмены должны матчиться с датакаталогом

Окупаемость внедряемых решений

Современные, устоявшиеся решения (системы) - только они принимаются на рассмотрения и внедрение

Компания как набор сервисов

Компания как набор продуктов

Высокая связанность систем и команд - развязывание систем

Архитектура должна обеспечить оперативное и гибкое решение развитию бизнес процессов компании. 

В связи с постоянным развитием информационных технологий и расширением бизнес-процессов компании, внедряется сервис-ориентированный подход к разработке (Service Orientired Architecture). 

Основные преимущества SOA

Гибкость и масштабируемость: SOA позволяет создавать сервисы, которые могут быть повторно использованы в различных контекстах ИТ ландшафта. Это способствует гибкости архитектуры, позволяя адаптироваться к изменяющимся потребностям бизнеса.

Интеграция: Внедрение SOA позволит интегрировать существующие сервисы, такие как 1С:CRM, 1С:УХ, веб-сервисы и системы управления персоналом (1С:ЗУП), в единую цифровую экосистему. Это улучшит взаимодействие между системами и уменьшит изоляцию данных.

Стандартизация и централизация управления: SOA обеспечивает стандартизацию разработки сервисов, что упрощает их управление и поддержку, а также повышает прозрачность и эффективность разработки.

Быстрое внедрение новых функций: SOA позволяет быстро разрабатывать и внедрять новые функции и сервисы без необходимости пересмотра всей системы.

Локализация изменений: Изменения в бизнес-логике или функциональности локализуются в пределах отдельных сервисов, чтобы минимизировать потенциальные негативные последствия и упростить управление изменениями.

Мониторинг и аналитика: Каждый сервис оборудован средствами мониторинга и аналитики, которые позволяют отслеживать его работоспособность, производительность и использование ресурсов. Это помогает быстро выявлять и устранять проблемы и оптимизировать работу системы в целом.

Импортозамещение, возможность замены сервисов на доступные в РФ

Тренды в развитии сервисов интеграций с внешними сервисами и клиентами

API First подход, NFT First?

Data Architecture - Как сервисы вписываются в существующие домены данных - Обмены должны матчиться с датакаталогом

Окупаемость внедряемых решений

Современные, устоявшиеся решения (системы) - только они принимаются на рассмотрения и внедрение

"""

#article_text = """Бизнес-архитектура компании"""
user_query   = "Какими архитектурными принципами руководствуется компания?"
score = similarity_score(article_text, user_query)
print(f"Similarity score: {score:.4f}")